#!/bin/bash

USER_NAME=admin
DAYS=100
ABS_ROOT_PATH=$(cd -P -- "$(dirname -- "$0")" && printf '%s\n' "$(pwd -P)")
ENV_FILE=${ABS_ROOT_PATH}/../config.env

#
# Convert relative path to absolute
#
function absolutePath {
    local target="$1"

    if [ "$target" == "." ]; then
        echo "$(pwd)"
    elif [ "$target" == ".." ]; then
        echo "$(dirname "$(pwd)")"
    else
        echo "$(cd "$(dirname "$1")"; pwd)/$(basename "$1")"
    fi
}

#
# Help function
#
function showUsage {
    echo -e ""
    echo -e "Generate a resto JSON Web Token (aka rJWT) authentication token for user"
    echo -e ""
    echo -e "   Usage $0 [options]"
    echo -e ""
    echo -e "   Options:"
    echo -e ""
    echo -e "      -e | --envfile Environnement file (default is ${GREEN}${ENV_FILE}${NC})"
    echo -e "      -i | --username User name (default is ${GREEN}${USER_NAME}${NC})"
    echo -e "      -d | --duration Duration of token in days (default ${GREEN}${DAYS}${NC})"
    echo -e "      -h | --help show this help"
    echo -e ""
    echo -e ""
}

while (( "$#" ));
do
	case "$1" in
        -e|--envfile)
            if [[ "$2" == "" || ${2:0:1} == "-" ]]; then
                showUsage
                echo -e "${RED}[ERROR] Missing config file name${NC}"
                echo -e ""
                exit 1
            fi
            ENV_FILE="$2"
            shift 2 # past argument
            ;;
        -i|--username)
            USER_NAME="$2"
            if [[ "$2" == "" || ${2:0:1} == "-" ]]; then
                showUsage
                echo -e "${RED}[ERROR] Missing username${NC}"
                echo -e ""
                exit 1
            fi
            shift 2 # past argument
            ;;
        -d|--days)
            DAYS="$2"
            if [[ "$2" == "" || ${2:0:1} == "-" ]]; then
                showUsage
                echo -e "${RED}[ERROR] Missing days${NC}"
                echo -e ""
                exit 1
            fi
            shift 2 # past argument
            ;;
        -h|--help)
            showUsage
            shift # past argument
            exit 0
            ;;
        --) # end argument parsing
            shift
            break
            ;;
        -*|--*=) # unsupported flags
            showUsage
            echo -e "${RED}[ERROR] Unsupported flag $1${NC}"
            echo -e ""
            exit 1
            ;;
	esac
done

if [[ ! -f $(absolutePath ${ENV_FILE}) ]]; then
    echo ""
    echo -e "${RED}[ERROR]${NC} The file ${ENV_FILE} does not exists"
    echo ""
    exit 1
fi

PUBLIC_ENDPOINT=$(grep ^PUBLIC_ENDPOINT= ${ENV_FILE} | awk -F= '{for (i=2; i<=NF; i++) print $i}'| xargs echo -n)
ADMIN_USER_NAME=$(grep ^ADMIN_USER_NAME= ${ENV_FILE} | awk -F= '{for (i=2; i<=NF; i++) print $i}'| xargs echo -n)
ADMIN_USER_PASSWORD=$(grep ^ADMIN_USER_PASSWORD= ${ENV_FILE} | awk -F= '{for (i=2; i<=NF; i++) print $i}'| xargs echo -n)

PUBLIC_ENDPOINT=${PUBLIC_ENDPOINT} \
ADMIN_USER_NAME=${ADMIN_USER_NAME} \
ADMIN_USER_PASSWORD=${ADMIN_USER_PASSWORD} \
curl -u "${ADMIN_USER_NAME}:${ADMIN_USER_PASSWORD}" "{$PUBLIC_ENDPOINT}/auth/create?username={$USER_NAME}&duration=${DAYS}"